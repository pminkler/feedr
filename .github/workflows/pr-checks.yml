name: Pull Request Checks

on:
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check:
    name: Lint & TypeCheck
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run code quality checks
        run: npm run check

  unit-tests:
    name: Unit Tests
    needs: check
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run unit tests
        run: npm test
      - name: Verify test failures
        run: npm run test:verify-failures

  # For PRs, we won't do a full backend deployment, but we'll get the outputs
  # from the target branch so we can test against the existing backend
  get-amplify-outputs:
    name: Get Amplify Outputs
    needs: unit-tests
    timeout-minutes: 10
    runs-on: ubuntu-latest
    environment: main
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Set CI environment variable
        run: |
          echo "CI=1" >> $GITHUB_ENV
      
      - name: Generate Amplify outputs
        env:
          AMPLIFY_APP_ID: ${{ secrets.AMPLIFY_APP_ID }}
          # For PRs, we use the target branch (main) outputs
          BRANCH_NAME: main
        run: |
          echo "Generating Amplify outputs for main branch"
          npx ampx generate outputs --branch $BRANCH_NAME --app-id $AMPLIFY_APP_ID
      
      - name: Upload amplify outputs
        uses: actions/upload-artifact@v4
        with:
          name: amplify-outputs
          path: amplify_outputs.json
          retention-days: 1

  e2e-tests:
    name: E2E Tests
    needs: get-amplify-outputs
    timeout-minutes: 60
    runs-on: ubuntu-latest
    environment: main
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Download amplify outputs
        uses: actions/download-artifact@v4
        with:
          name: amplify-outputs
          path: ./
      
      - name: Generate static site
        env:
          NUXT_UI_PRO_LICENSE: ${{ vars.NUXT_UI_PRO_LICENSE }}
        run: npm run generate
      
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      
      - name: Start local server
        run: |
          npx pm2 start "npx serve .amplify-hosting/static --single" --name nuxt-app
          npx wait-on --timeout 60000 http://localhost:3000
          echo "Local server started on http://localhost:3000"
      
      - name: Run Playwright tests
        run: npm run test:e2e
      
      - name: Stop local server
        if: always()
        run: npx pm2 delete nuxt-app || true
      
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30